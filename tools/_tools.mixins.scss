///**
// * #MIXINS
// * ======================================================================== */

// Global mixins available to the entire project. Define file-specific
// mixins inside the file to which they relate.





// Generate a font-size and baseline-compatible line-height.
@mixin inuit-font-size($font-size, $line-height: auto) {

  @if ($inuit-oldIE == true) {
    font-size: $font-size;
  }

  font-size: ($font-size / $inuit-global-font-size) * 1rem;

  @if ($line-height == 'auto') {
    line-height: ceil($font-size / $inuit-global-line-height) * ($inuit-global-line-height / $font-size);
  }

  @else {

    @if (type-of($line-height) == number or $line-height == 'inherit' or $line-height == 'normal') {
      line-height: $line-height;
    }

    @elseif ($line-height != 'none' and $line-height != false) {
      @warn "D’oh! ‘#{$line-height}’ is not a valid value for `line-height`."
    }

  }

}





// Mixin to create a declaration whose value is a rem unit. Also provide pixel
// fallback.
//
// .simple-usage {
//   @include inuit-rem(padding, 10px);
// }

@mixin inuit-rem($property, $value) {

  @if ($inuit-oldIE == true) {
    #{$property}: $value;
  }

  #{$property}: inuit-rem($value);
}





// Mixin to drop micro clearfix into a selector. Further reading:
// http://www.cssmojo.com/the-very-latest-clearfix-reloaded/
//
// .simple-usage {
//   @include inuit-clearfix();
// }
//
// .detailed-usage {
//   @include inuit-clearfix(important);
// }

@mixin inuit-clearfix($important: false) {

  // Determine whether or not to make declarations important.
  @if ($important == false) {
    $important: null;
  } @else {
    $important: !important;
  }

  &:after {
    content: "" $important;
    display: block $important;
    clear: both $important;
  }

}





// Generate `:hover` and `:focus` styles in one go.
@mixin inuit-hocus() {
  &:hover,
  &:focus {
    @content;
  }
}
